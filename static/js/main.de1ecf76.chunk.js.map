{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.jsx","utilities.js","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App.jsx","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","followers","views","likes","profile","styles","description","userAvatar","userName","userTag","userLocation","label","quantity","className","src","alt","getRandColor","getRandNumber","Math","floor","random","Statistics","title","statistics","sectionTitle","statList","item","labelStyle","percentageStyle","length","map","elem","id","percentage","key","style","backgroundColor","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","TransactionHistory","items","transactionHistory","tableHead","tableBody","type","amount","currency","transaction","App","user","statData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de1ecf76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3YaXH\",\"description\":\"Profile_description__3LnI4\",\"userAvatar\":\"Profile_userAvatar__1naaO\",\"userName\":\"Profile_userName__2tjqv\",\"userTag\":\"Profile_userTag__1x2dk\",\"userLocation\":\"Profile_userLocation__21EoN\",\"stats\":\"Profile_stats__fBLyD\",\"label\":\"Profile_label__2hKKy\",\"quantity\":\"Profile_quantity__3X1AC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1FSsw\",\"sectionTitle\":\"Statistics_sectionTitle__GqVvg\",\"statList\":\"Statistics_statList__3EGuz\",\"item\":\"Statistics_item__2UEmo\",\"labelStyle\":\"Statistics_labelStyle__314fL\",\"percentageStyle\":\"Statistics_percentageStyle__1yh6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2lVs-\",\"userAvatar\":\"FriendListItem_userAvatar__2F1Vl\",\"userName\":\"FriendListItem_userName__2Z4ko\",\"online\":\"FriendListItem_online__1YphG\",\"offline\":\"FriendListItem_offline__2akpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1RHyw\",\"tableHead\":\"TransactionHistory_tableHead__1l5pz\",\"transaction\":\"TransactionHistory_transaction__1rqVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__DBzxa\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\n\r\nconst Profile = ({\r\n  avatar,\r\n  name = 'user name',\r\n  tag = 'tags',\r\n  location = 'user location',\r\n  stats: { followers, views, likes },\r\n}) => {\r\n  const {\r\n    profile, description, userAvatar, userName, userTag, userLocation, stats, label, quantity,\r\n  } = styles;\r\n  return (\r\n    <div className={profile}>\r\n      <div className={description}>\r\n        <img src={avatar} alt=\"user avatar\" className={userAvatar} />\r\n        <p className={userName}>{name}</p>\r\n        <p className={userTag}>\r\n          @\r\n          {tag}\r\n        </p>\r\n        <p className={userLocation}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={stats}>\r\n        <li>\r\n          <span className={label}>Followers</span>\r\n          <span className={quantity}>{followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={label}>Views</span>\r\n          <span className={quantity}>{views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={label}>Likes</span>\r\n          <span className={quantity}>{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","function getRandColor() {\r\n  const getRandNumber = () => Math.floor(Math.random() * Math.floor(255));\r\n  return `rgb(${getRandNumber()}, ${getRandNumber()}, ${getRandNumber()})`;\r\n}\r\n\r\nexport default getRandColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\nimport getRandColor from '../../utilities';\r\n\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  const {\r\n    statistics, sectionTitle, statList, item, labelStyle, percentageStyle,\r\n  } = styles;\r\n  return (\r\n    <section className={statistics}>\r\n      {!!title.length && <h2 className={sectionTitle}>{title}</h2>}\r\n      <ul className={statList}>\r\n        {stats.map((elem) => {\r\n          const { id, label, percentage } = elem;\r\n          return (\r\n            <li\r\n              key={id}\r\n              className={item}\r\n              style={{ backgroundColor: getRandColor() }}\r\n            >\r\n              <span className={labelStyle}>{label}</span>\r\n              <span className={percentageStyle}>\r\n                {percentage}\r\n                %\r\n              </span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendListItem.module.css';\r\n\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  const { item, online, offline, userAvatar, userName } = styles;\r\n  return (\r\n    <li className={item}>\r\n      <span className={isOnline ? online : offline} />\r\n      <img className={userAvatar} src={avatar} alt=\"user avatar\" width={48} />\r\n      <p className={userName}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\nimport styles from './FriendList.module.css';\r\n\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styles.friendList}>\r\n    {friends.map((elem) => {\r\n      const {\r\n        avatar, name, isOnline, id,\r\n      } = elem;\r\n      return (\r\n        <FriendListItem\r\n          avatar={avatar}\r\n          name={name}\r\n          isOnline={isOnline}\r\n          key={id}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape({\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n  })),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  const { transactionHistory, tableHead, tableBody } = styles;\r\n  return (\r\n    <table className={transactionHistory}>\r\n      <thead className={tableHead}>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n      </thead>\r\n\r\n      <tbody className={tableBody}>\r\n      {items.map((elem) => {\r\n        const {\r\n          id, type, amount, currency,\r\n        } = elem;\r\n        return (\r\n          <tr key={id} className={styles.transaction}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\n\r\n// Components\r\nimport Profile from './Profile/Profile';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FriendList from './FriendList/FriendList';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\n\r\n// db\r\nimport user from '../db/user.json';\r\nimport statData from '../db/statistical-data.json';\r\nimport friends from '../db/friends.json';\r\nimport transactions from '../db/transactions.json';\r\n\r\nconst App = () => {\r\n  const { name, tag, location, avatar, stats } = user;\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={name}\r\n        tag={tag}\r\n        location={location}\r\n        avatar={avatar}\r\n        stats={stats}\r\n      />\r\n      <Statistics title=\"Upload Statistics\" stats={statData}/>\r\n      <FriendList friends={friends}/>\r\n      <TransactionHistory items={transactions}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}